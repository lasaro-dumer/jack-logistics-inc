// <auto-generated />
using System;
using JackLogisticsInc.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace JackLogisticsInc.API.Migrations
{
    [DbContext(typeof(LogisticsDbContext))]
    [Migration("20220710052735_ShipmentIsOptionalForPackages")]
    partial class ShipmentIsOptionalForPackages
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("logistics")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("JackLogisticsInc.API.Data.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Building")
                        .HasColumnType("text");

                    b.Property<string>("Corridor")
                        .HasColumnType("text");

                    b.Property<string>("Floor")
                        .HasColumnType("text");

                    b.Property<int>("PackageId")
                        .HasColumnType("integer");

                    b.Property<string>("Shelf")
                        .HasColumnType("text");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Building = "1A",
                            Corridor = "A",
                            Floor = "1",
                            PackageId = 0,
                            Shelf = "001",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            Building = "1A",
                            Corridor = "A",
                            Floor = "1",
                            PackageId = 0,
                            Shelf = "002",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            Building = "1A",
                            Corridor = "B",
                            Floor = "1",
                            PackageId = 0,
                            Shelf = "001",
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 4,
                            Building = "1A",
                            Corridor = "B",
                            Floor = "1",
                            PackageId = 0,
                            Shelf = "002",
                            WarehouseId = 1
                        });
                });

            modelBuilder.Entity("JackLogisticsInc.API.Data.Entities.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("LocationId")
                        .HasColumnType("integer");

                    b.Property<int?>("ShipmentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.HasIndex("ShipmentId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("JackLogisticsInc.API.Data.Entities.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DeliveredAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DestinationAddress")
                        .HasColumnType("text");

                    b.Property<DateTime>("LeftForDestinationAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("JackLogisticsInc.API.Data.Entities.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AddressData")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressData = "F38M+QM Glória, Estrela - RS",
                            Name = "Main Street Deposit"
                        });
                });

            modelBuilder.Entity("JackLogisticsInc.API.Data.Entities.Location", b =>
                {
                    b.HasOne("JackLogisticsInc.API.Data.Entities.Warehouse", "Warehouse")
                        .WithMany("Locations")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("JackLogisticsInc.API.Data.Entities.Package", b =>
                {
                    b.HasOne("JackLogisticsInc.API.Data.Entities.Location", "Location")
                        .WithOne("Package")
                        .HasForeignKey("JackLogisticsInc.API.Data.Entities.Package", "LocationId");

                    b.HasOne("JackLogisticsInc.API.Data.Entities.Shipment", "Shipment")
                        .WithMany("Packages")
                        .HasForeignKey("ShipmentId");

                    b.Navigation("Location");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("JackLogisticsInc.API.Data.Entities.Location", b =>
                {
                    b.Navigation("Package");
                });

            modelBuilder.Entity("JackLogisticsInc.API.Data.Entities.Shipment", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("JackLogisticsInc.API.Data.Entities.Warehouse", b =>
                {
                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
